* {
	margin: 0;
	padding: 0;
	text-decoration: none;
	list-style-type: none;
	font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
	transition: background 300ms;
}

[theme-mode="dark"] {
	--background-color: #121212;
	--secondair-background-color: #242424;
	--text-color: #fafafa;
	--secondair-text-color: #bbbbbb;
	--main-color: #7de558;
	--main-bright-color: #aaee91;
}

[theme-mode="light"] {
	--background-color: #fafafa;
	--secondair-background-color: #f0f0f0;
	--text-color: #121212;
	--secondair-text-color: #757575;
	--main-color: #7de558;
	--main-bright-color: #aaee91;
}

html,
body {
	height: 100svh;
	background: var(--background-color);
	color: var(--text-color);
}

button {
	padding: 1rem 1.25rem;
	border: var(--main-color);
	background-color: var(--main-color);
	color: black;
	cursor: pointer;
	border-radius: 40px;
	transition: 0.25s;
	width: 40%;
	min-width: max-content;
}

button:hover {
	transform: scale(1.05);
	box-shadow: 0px 0px 10px 4px rgba(0, 0, 0, 0.15);
}

a {
	color: inherit;
}

header {
	width: 100%;
	z-index: 1;
	background: var(--background-color);
	transition: top 500ms, background 300ms;
}

form {
	min-width: 30%;
	max-width: 500px;
	display: flex;
	flex-direction: column;
	align-items: center;
	background-color: var(--secondair-background-color, #f0f0f0);
	padding: 3rem 10%;
	margin: 0 2rem;
	border-radius: 0.5rem;
}

.container {
	min-height: 100svh;
	--container-max-width: 60rem;
	display: grid;
	grid-template-columns:
		[full-width-start breakout-left-start]
		minmax(1rem, 1fr)
		[content-start breakout-right-start]
		min(100% - 2rem, var(--container-max-width))
		[content-end breakout-left-start]
		minmax(1rem, 1fr)
		[full-width-end breakout-right-end];
	grid-template-rows: auto 1fr;
}

.wrapper {
	display: flex;
	justify-content: center;
}

.header {
	--header-offset: 0;
	position: sticky;
	top: 0;
	display: flex;
	justify-content: space-between;
	grid-column: full-width;
	border-bottom: 3px solid var(--main-color);
	margin: 0 0 2rem;
}

.header.headerDown {
	top: calc(0px - var(--header-offset));
}

/* .logo {
	height: 100%;
	aspect-ratio: 1 / 1;
	border-radius: 50%;
	background: conic-gradient(from -90deg, green 60deg, orange 60deg, orange 120deg, red 120deg, red 180deg, transparent 180deg, transparent);
} */

.checkbox {
	--bezier: cubic-bezier(0.09, 2.2, 0.47, 0.99);
	min-width: 4em;
	min-height: 40%;
	aspect-ratio: 2/1;
	background: var(--secondair-background-color);
	border-radius: 100vw;
	overflow: clip;
}

.checkbox:hover {
	background: #7de55850;
	cursor: pointer;
}

.checkbox input {
	display: none;
}

.checkbox .toggle {
	position: relative;
	transition: 250ms;
	height: 100%;
}

.checkbox .toggle .sun,
.checkbox .toggle .toggleButton,
.checkbox .toggle .moon {
	display: flex;
	height: 50%;
	aspect-ratio: 1/1;
	top: 50%;
	transform: translate(-0, -50%) rotate(-135deg);
	position: absolute;
}

.checkbox .toggle .sun {
	left: 10%;
	transform: translate(-0, -50%) rotate(0deg);
}

.checkbox .toggle .sun,
.checkbox .toggle .moon {
	transition: opacity 150ms, 500ms var(--bezier);
	transform-origin: center;
}

#darkmodeToggle:checked ~ .toggle .sun {
	left: -50%;
	transform: translate(-0, -50%) rotate(-135deg);
}

.checkbox .toggle .toggleButton {
	transition: background-color 250ms, border-color 250ms, 500ms cubic-bezier(0.1, 1.7, 0.76, 1);
	left: 90%;
	transform: translate(-100%, -50%);
}

#darkmodeToggle:checked ~ .toggle .toggleButton {
	left: 10%;
	transform: translate(0, -50%);
}

.checkbox .toggle .toggleButton path {
	stroke: var(--main-color);
	fill: var(--main-bright-color);
}

#darkmodeToggle:checked ~ .toggle .moon {
	left: 90%;
	transform: translate(-100%, -50%);
}

.checkbox .toggle .moon {
	left: 150%;
	transform: translate(0, -50%) rotate(135deg);
}

.header .navbar {
	display: flex;
	align-items: center;
	gap: 1rem;
}

.header ul {
	display: flex;
	gap: 1rem;
}

.header ul button {
	color: inherit;
	background: transparent;
	border-radius: 0;
}

.header ul button.active {
	color: black;
	background-color: var(--main-color);
}

.header button:hover {
	transform: scale(1);
	box-shadow: 0px 0px 0 0;
}

.header button:not(.active):hover {
	background-color: #7de55850;
}

.form-group {
	display: grid;
	grid-template-columns: auto;
	justify-items: center;
	gap: 0.5rem;
	padding-top: 15px;
	width: 100%;
	position: relative;
	overflow-x: clip;
	margin-bottom: 1.5rem;
}

.form-group .optionsWrapper {
	width: 100%;
	display: flex;
	justify-content: center;
	gap: 1.5rem;
}

.form-group .optionsWrapper .dropdown .optionWrapper {
	height: calc((0.5rem + 0.5rem + 1.3125em) * 3);
	overflow: auto;
	scroll-behavior: smooth;
}

.dropdown {
	position: relative;
}

.dropdown input {
	padding: 0.5rem 1rem;
	border: none;
}

.dropdown input:focus {
	outline: none;
}

.dropdown input:focus + .optionWrapper,
.dropdown .optionWrapper:hover {
	display: block;
}

.dropdown .optionWrapper {
	display: none;
	position: absolute;
	width: 100%;
	min-width: fit-content;
	z-index: 1;
}

.dropdown .optionWrapper input {
	display: none;
}

.dropdown .optionWrapper > li {
	display: block;
	padding: 0.5rem 1rem;
	background: var(--secondair-background-color);
	filter: brightness(120%);
}

[theme-mode="light"] .dropdown .optionWrapper > li:hover {
	filter: brightness(80%);
}

[theme-mode="dark"] .dropdown .optionWrapper > li:hover {
	filter: brightness(150%);
}

.form-group > input[type="text"],
.form-group > input[type="email"],
.form-group > input[type="password"] {
	color: var(--text-color);
	min-width: fit-content;
	width: 100%;
	padding: 10px;
	border: none;
	outline: none;
	border-bottom: 1px solid var(--secondair-text-color, #757575);
	box-sizing: border-box;
	font-size: 16px;
	position: relative;
	z-index: 5;
	background: none;
}

.form-group > input:is(input[type="text"], input[type="password"], input[type="email"])::placeholder {
	color: var(--secondair-text-color);
}

.invalide > input {
	border-bottom: 1px solid #e92c2c;
}

.invalide > input::placeholder {
	color: #e92c2c;
}

.valide > input {
	border-bottom: 1px solid var(--main-color);
}

.valide > input::placeholder {
	color: var(--main-color);
}

.form-group:has(input[type="text"], input[type="password"], input[type="email"]) > label {
	position: absolute;
	left: 10px;
	top: 45%;
	transition: ease-out 0.25s;
	color: var(--secondair-text-color);
	opacity: 0;
}

.underline {
	position: absolute;
	left: 0;
	bottom: 0;
	width: 100%;
	height: 3px;
	background: #7de558;
	left: -100%;
	transition: ease-out 0.25s;
	opacity: 0;
	z-index: 6;
}

.form-group:has(input[type="text"], input[type="password"], input[type="email"]) > input:focus ~ label,
.form-group:has(input[type="text"], input[type="password"], input[type="email"]) > input:valid ~ label {
	top: 0px;
	transform: scale(0.94) translateX(-2px);
	color: var(--main-color);
	opacity: 1;
	z-index: 5;
	font-weight: bold;
}

.invalide > .underline {
	background: #e92c2c;
}

.invalide > input:focus ~ label,
.invalide > input:valid ~ label {
	top: 0px;
	transform: scale(0.94) translateX(-2px);
	color: #e92c2c;
	opacity: 1;
	z-index: 5;
	font-weight: bold;
}

.form-group:has(input[type="text"], input[type="password"], input[type="email"]) > input:focus ~ .underline,
.form-group:has(input[type="text"], input[type="password"], input[type="email"]) > input:valid ~ .underline {
	left: 0;
	opacity: 1;
}

input[type="radio"] {
	display: none;
}

input[type="radio"] + label {
	color: var(--main-color);
	display: flex;
	align-items: center;
	position: relative;
	cursor: pointer;
	transition: all 0.25s cubic-bezier(0.25, 0.25, 0.5, 1.9);
	z-index: 1;
}

input[type="radio"]:hover + label {
	color: var(--main-bright-color);
}

input[type="radio"] + label::before {
	border-radius: 100vw;
	content: "";
	position: absolute;
	left: -1em;
	width: 1.5rem;
	height: 1.5rem;
	background: transparent;
	border: 2px solid;
	z-index: -1;
	transition: all 0.25s cubic-bezier(0.25, 0.25, 0.5, 1.9);
}

input[type="radio"] + label {
	padding: 1rem 1rem 1rem 2rem;
}

input[type="radio"]:checked + label {
	color: black;
	padding: 1rem 1.5rem 1rem 1.5rem;
}

input[type="radio"]:checked + label::before {
	width: 100%;
	left: 0;
	height: 100%;
	background: var(--main-color);
	border: 0;
}
